// <auto-generated />
using System;
using Berk.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Berk.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191127183755_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Berk.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText");

                    b.Property<int?>("LocationID");

                    b.Property<int?>("MemberNameMemberID");

                    b.Property<string>("Sender");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("CommentID");

                    b.HasIndex("LocationID");

                    b.HasIndex("MemberNameMemberID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Berk.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Berk.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<bool>("IsAdmin");

                    b.Property<DateTime>("Joined");

                    b.Property<string>("Name");

                    b.Property<DateTime>("becameAdmin");

                    b.HasKey("MemberID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Berk.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MemberID");

                    b.Property<string>("MemberName");

                    b.Property<string>("MessageText");

                    b.Property<DateTime>("Sent");

                    b.HasKey("MessageID");

                    b.HasIndex("MemberID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Berk.Models.VIP", b =>
                {
                    b.Property<int>("VIPID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAlive");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<string>("Reason");

                    b.HasKey("VIPID");

                    b.ToTable("VIPs");
                });

            modelBuilder.Entity("Berk.Models.Comment", b =>
                {
                    b.HasOne("Berk.Models.Location")
                        .WithMany("Commments")
                        .HasForeignKey("LocationID");

                    b.HasOne("Berk.Models.Member", "MemberName")
                        .WithMany("Comments")
                        .HasForeignKey("MemberNameMemberID");
                });

            modelBuilder.Entity("Berk.Models.Message", b =>
                {
                    b.HasOne("Berk.Models.Member")
                        .WithMany("Messages")
                        .HasForeignKey("MemberID");
                });
#pragma warning restore 612, 618
        }
    }
}
